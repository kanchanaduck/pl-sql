-- 1. WHEN-NEW-FROM-INSTANCE
LIST_VENDOR_TYPE('SCH_VENDOR_TYPE');

:SCH_VENDOR_TYPE := '%';


GO_BLOCK('HITT_VENDORS_PAYMENTS');
EXECUTE_QUERY();

-- 2. QUERY BLOCK AND CALL WHEN LIST CHANGED
PROCEDURE QUERY_V IS
BEGIN
  GO_BLOCK('HITT_VENDOR_PAYMENTS');
  EXECUTE_QUERY();
END;


-- 3. WHERE QUERY
1=1
AND SEGMENT1 LIKE '%'||:SCH_VENDOR_CODE||'%'
AND UPPER(VENDOR_NAME) LIKE '%'||UPPER(:SCH_VENDOR)||'%'
AND NVL(VENDOR_TYPE_LOOKUP_CODE,'DUMMY') LIKE :SCH_VENDOR_TYPE||'%'
AND NVL(NAME,'DUMMY') LIKE :SCH_TERM||'%'
AND NVL(PAYMENT_MTH,'DUMMY') LIKE :SCH_METHOD||'%'


-- 4. ADD ELEMENT LIST IN TABLE
PROCEDURE LIST_VENDOR_TYPE (V_LIST IN VARCHAR2) IS

CURSOR LIS IS

SELECT 'ALL' VENDOR_TYPE_LOOKUP_CODE,'%' VALUE_TYPE  FROM DUAL
UNION
SELECT DISTINCT NVL(VENDOR_TYPE_LOOKUP_CODE,'-') VENDOR_TYPE_LOOKUP_CODE ,   NVL(VENDOR_TYPE_LOOKUP_CODE,'DUMMY') VALUE_TYPE
FROM HITT_VENDOR_PAYMENTS V;

A NUMBER := 0;
BEGIN          
:SYSTEM.MESSAGE_LEVEL := 10;
                                
                CLEAR_LIST(V_LIST);
                FOR L IN LIS LOOP
                     A := A + 1;
                     ADD_LIST_ELEMENT(V_LIST,A,L.VENDOR_TYPE_LOOKUP_CODE,L.VALUE_TYPE);
                     --ADD_LIST_ELEMENT(V_LIST,A,SHOW,VALUE);
                END LOOP;
:SYSTEM.MESSAGE_LEVEL := 0;
END;
